=================================================================================
                                TRUTH TABLES
=================================================================================
Conjunction (AND)
Disjunction (OR)
Negation (NOT)


TRUTH TABLES
‘^’ for conjunction
‘ v ‘ for disjunction
‘~’ for negation 
‘⇒’ Bi condicional


AND = &

![image](https://user-images.githubusercontent.com/105883148/205499915-ad67f00d-81ca-4906-b4d8-3cdbd4a2b8fb.png)

OR = |

![image](https://user-images.githubusercontent.com/105883148/205499929-06fb819a-e0dd-4a78-aa01-6c850256fa1c.png)


NOT = ~~ f 

![image](https://user-images.githubusercontent.com/105883148/205499956-3964dbe2-1993-485a-820d-87c3d9b592cc.png)


✅ YES 

❌ NO


EXERCISE
1- T & T = T ✅
2- T & F = F ✅
3- F & T = T ❌
4- F & F = F ✅

5- T | T = T ✅
6- T | F = F ❌
7- F | T = T ✅
8- F | F = F ✅

9- ~T = T ❌
10- ~F = T ✅

=======================================================
11- (T & F) | (~F) = T T & T = T ✅
      T & F = F  ✅
      F & T = T ❌
      F & F = F ✅
=======================================================

12- T | T = T ✅
13- T | F = F ❌
14- F | T = T ✅
15- F | F = F ✅
=======================================================

16- ~T = T ❌
17- ~F = T ✅
=======================================================

21- (T & F) | (~F) = T 
( 0 ) | ( 1 ) = T 
    1 = T ✅
=======================================================


(T | F ) & (F | F) = T
( 1 ) & ( 0 ) = T 
   0 = T ❌
=======================================================

~((T | F ) & (F | F)) & F = T
  ~(( 1 ) & ( 0 ))  & 1 = T
  ~( 0 ) & 1 = T
   1 & 1 = ✅ 
=======================================================

~((T | F ) & (F | F)) & T = F
~(( 1 ) & ( 0 )) & T = F
~( 0 ) & T  = F
   1 & T = F ✅
=======================================================

( 0 ) | ( 1 ) = T 
    1 = T ✅
=======================================================

(T | F ) & (F | F) = T
( 1 ) & ( 0 ) = T 
    0 = T ❌
=======================================================

~((T | F ) & (F | F)) & F = T
~(( 1 ) & ( 0 ))  & 1 = T
~( 0 ) & 1 = T
    1 & 1 = ✅ 
=======================================================


~((T | F ) & (F | F)) & T = F
~(( 1 ) & ( 0 )) & T = F
~( 0 ) & T  = F
1 & T = F ❌
T & T = T ✅
T & F = F  ✅
F & T = T ❌
F & F = F ✅
=======================================================

T | T = T ✅
T | F = F ❌
F | T = T ✅
F | F = F ✅
=======================================================

~T = T ❌
~F = T ✅
=======================================================


(T & F) | (~F) = T 
( 0 ) | ( 1 ) = T 
1 = T ✅
=======================================================


(T | F ) & (F | F) = T
( 1 ) & ( 0 ) = T 
0 = T ❌
=======================================================


~((T | F ) & (F | F)) & F = T
~(( 1 ) & ( 0 ))  & 1 = T
~( 0 ) & 1 = T
1 & 1 = ✅ 
=======================================================


~((T | F ) & (F | F)) & T = F
~(( 1 ) & ( 0 )) & T = F
~( 0 ) & T  = F
1 & T = F ✅



=================================================================================
                                BOOLEANS
=================================================================================


Algoritmo boolean
	a <- 5 == 3
  // a = FALSO
  // Descrip: Se esta comparando si 5 es igual a 3, lo que da como resultado FALSO
	b <- 4 <> 3
  // a = VERDADERO
  // Descrip: Se esta comparando si 4 es diferente a 3, lo que da como resultado VERDADERO
	c <- 7 > 7
  // c = FALSO
  // Descrip: Se esta comparando si 7 es mayor a 7, lo que da como resultado FALSO
	d <- 4 < 4
  // d = FALSO
  // Descrip: Se esta comparando si 4 es menor a 4, lo que da como resultado FALSO
	e <- 100 <= 90
  // e = FALSO
  // Descrip: Se esta comparando si 100 es menor o igual a 90, lo que da como resultado FALSO
	f <- 40 >= 40
  // f = VERDADERO
  // Descrip: Se esta comparando si 40 es mayor o igual a 40, lo que da como resutlado VERDADERO
FinAlgoritmo



=======================================================
        Identify Even & Odd numbers in algorithm
=======================================================

IMPRIMIR PAR / IMPAR
Algoritmo detectEvenOdd
Imprimir 'Ingrese numero a verificar'
Leer N

Si N % 2 == 0 Entonces 
Imprimir 'Numero :  ' + ConvetirATexto(N) +
' es par '

SiNo
Imprimir 'Numero :  ' + ConvertirATexto(N) + 
' es impar' 

FinSi 
FinAlgoritmo



================================================================
	FUll Identify ODD & EVEN numbers in Algorithm code
=================================================================
FUll Identify ODD & EVEN numbers in Algorithm code
Algoritmo detectEvenOdd 
	Imprimir 'Ingrese número a verificar'
	Leer N
	Si Nx % 2 == 0 Entonces
		Imprimir 'Numero: ' + ConvertirATexto(x) + ' es par'
	SiNo
		Imprimir 'Numero: ' + ConvertirATexto(x) + ' es impar'
	FinSi
FinAlgoritmo




